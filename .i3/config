### i3 config
# Evan Widloski - 2015-08-21 

# set Modifier keys
set $mod mod4
set $mod_b mod1
# assign Capslock to Mod4, use Left Windows key as compose key
exec "setxkbmap -layout us -option caps:super,compose:lwin,compose:ralt"

# Set font
set $font Terminus

# dmenu
# bindsym $mod+d exec dmenu_run -b
bindsym $mod+d exec "rofi -modi combi -show combi -combi-modi run,drun || dmenu_run -b"
# restart i3 (preserves session, reloads config and resets i3bar)
# bindsym $mod+t restart
bindsym $mod+t reload
# exit i3
bindsym $mod+$mod_b+e exec "i3-msg exit"
# kill focused window
bindsym $mod+w kill

# ----- Navigation -----
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# focus the parent container
bindsym $mod+a focus parent
# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle
# dont change focus when mouse moves
focus_follows_mouse no
# don't use navigation keys to move between workspaces
# focus_wrapping force
# change workspaces
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# ----- Moving Windows -----
bindsym $mod+$mod_b+j move left
bindsym $mod+$mod_b+k move down
bindsym $mod+$mod_b+l move up
bindsym $mod+$mod_b+semicolon move right
bindsym $mod+$mod_b+Left move left
bindsym $mod+$mod_b+Down move down
bindsym $mod+$mod_b+Up move up
bindsym $mod+$mod_b+Right move right
# move window to workspace
bindsym $mod+$mod_b+1 move container to workspace 1
bindsym $mod+$mod_b+2 move container to workspace 2
bindsym $mod+$mod_b+3 move container to workspace 3
bindsym $mod+$mod_b+4 move container to workspace 4
bindsym $mod+$mod_b+5 move container to workspace 5
bindsym $mod+$mod_b+6 move container to workspace 6
bindsym $mod+$mod_b+7 move container to workspace 7
bindsym $mod+$mod_b+8 move container to workspace 8
bindsym $mod+$mod_b+9 move container to workspace 9
bindsym $mod+$mod_b+0 move container to workspace 10
# use Mouse+$mod to drag floating windows
floating_modifier $mod

# ----- Resizing Windows -----
mode "resize" {
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# ----- Window Modes -----
bindsym $mod+f fullscreen
bindsym $mod+u floating toggle
bindsym $mod+i layout tabbed
bindsym $mod+o layout toggle split
bindsym $mod+s sticky toggle
# window splitting mode
bindsym $mod+h split h
bindsym $mod+v split v
 
# ----- Theming -----
set $blue #0087e8
set $black #000000
set $gray #444444
set $pink #e89393
set $black #000000
set $white #ffffff
set $orange #ff8700
#                       title border  background  title text
client.focused          $blue         $blue       $black 
client.focused_inactive $black        $gray       $black 
client.unfocused        $gray         $gray       $black
client.urgent           $orange       $orange     $black
# set border on all windows
for_window [class="^.*"] border pixel 3
for_window [class="^.*Matplotlib.*"] border normal

# ----- Status Bar -----
bar {
    position top
    font pango:$font 14
    # status_command ~/.i3/statusline_evidlo
    status_command ~/.i3/statusline.py
    # status_command ~/.i3/testbar
    colors {
        background $black
        statusline $white
        separator $gray
        #                  Border  Fill   Text
        active_workspace   $black  $black $orange
        focused_workspace  $blue   $blue  $black
        inactive_workspace $black  $black $blue
        urgent_workspace   $orange $black $orange
    }
}

# ----- Workspace and Program Assignment -----
# assign workspaces to monitors
# set $get_primary "xrandr | awk '/ connected primary/{print $1}'"
# set $get_secondary "xrandr | awk '/ connected primary/{next}/ connected/{print $1;exit}'"

set $primary VGA-1
set $secondary LVDS-1
# set $primary LVDS-1
# set $secondary VGA-1

workspace 1 output $primary
workspace 2 output $primary
workspace 3 output $primary
workspace 4 output $secondary
workspace 5 output $secondary
# auto-float windows
for_window [title=".*Shutter.*"] floating enable
for_window [title=".*Figure.*"] floating enable
for_window [instance="floating"] floating enable

# ----- Program Shortcuts -----
bindsym $mod+apostrophe exec urxvt || darktile || urxvt256c || urxvt-256color || urxvt || xterm
bindsym XF86AudioRaiseVolume exec "pactl set-sink-volume @DEFAULT_SINK@ +10%"
bindsym XF86AudioLowerVolume exec "pactl set-sink-volume @DEFAULT_SINK@ -10%"
# music player shortcuts
bindsym XF86AudioNext exec "playerctl next"
bindsym XF86AudioPrev exec "playerctl previous"
bindsym XF86AudioStop exec "playerctl stop"
bindsym XF86AudioPlay exec "playerctl play-pause"
# music player shortcuts - compatibility
bindsym Control+Right exec "playerctl next"
bindsym Control+Left exec "playerctl previous"
bindsym Control+Up exec "playerctl stop"
bindsym Control+Down exec "playerctl play-pause"
# bindsym XF86Launch1 exec "amixer set Capture toggle"
# bindsym XF86Launch1 exec "xfce4-terminal --fullscreen --command=/tmp/shkype.sh"
bindsym XF86AudioMute exec "pactl set-sink-mute @DEFAULT_SINK@ toggle"
bindsym XF86AudioMicMute exec "pactl set-source-mute @DEFAULT_SOURCE@ toggle"
bindsym Print exec "maim -s /tmp/out.png"
bindsym $mod+n exec nautilus
bindsym XF86MonBrightnessDown exec "xbacklight -dec 5"
bindsym XF86MonBrightnessUp exec "xbacklight -inc 5"
bindsym $mod+m exec PATH=/home/evan/resources/venv3/bin:$PATH mpv "$(xsel -o || wl-paste)" --load-unsafe-playlists 2>&1 >> /tmp/mpv_log
bindsym $mod+e exec rofimoji -s light
bindsym $mod+c exec env > /tmp/dump
# bindsym $mod+p exec ~/resources/venv3/bin/passhole type "dmenu -b"
# bindsym $mod+Shift+p exec ~/resources/venv3/bin/passhole type --tabbed "dmenu -b"
bindsym $mod+p exec /home/evan/resources/venv3/bin/ph type passhole --prog "rofi -dmenu" --xdotool
bindsym $mod+Shift+p exec /home/evan/resources/venv3/bin/ph type passhole --tabbed --prog "rofi -dmenu" --xdotool
# bindsym $mod+p exec /home/evan/resources/venv3/bin/ph type --prog
bindsym $mod+x exec sh -c "xdotool type --delay 15 $(/home/evan/resources/venv3/bin/illinikey)"
# bindsym $mod+y exec exec urxvt256c -name floating -e pulsemixer
# bindsym $mod+y exec sh -c "echo hi >> /tmp/err && export DISPLAY=:0 && sleep .5 && xdotool type foobar 2>&1 >> /tmp/err"
# bindsym $mod+y exec sh -c "xdotool type foobar"
bindsym $mod+y exec sh -c "/home/evan/resources/venv3/bin/illinikey 2>&1 >> /tmp/err && echo new >> /tmp/err"
# bindsym $mod+b exec /home/evan/resources/venv3/bin/ph --debug type passhole --prog "rofi -dmenu" --xdotool --otp


set $test exec echo hello

# bindsym $mod+g exec echo $get_primary >> /tmp/dump
# bindsym $mod+g exec "/usr/bin/python3 -c \\"import sys; open('/tmp/log', 'a').write(str(sys.stdin.isatty()) + '\n')\\""
bindsym $mod+g exec "echo $DISPLAY >> /tmp/log"
# bindsym $mod+g exec "/usr/bin/python3 -c \\"import subprocess; open('/tmp/log', 'a').write(str(subprocess.check_output('tty')) + '\n')\\""

# ----- Startup -----
exec_always --no-startup-id ~/resources/venv3/bin/flashfocus -t 100 -o 0
exec_always --no-startup-id nm-applet -t 100 -o 0
exec_always --no-startup-id dunst -t 100 -o 0
